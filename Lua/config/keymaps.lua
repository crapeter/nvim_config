local map = vim.keymap.set

-- n --
map("n", "<leader>ds", "<cmd>NoiceDismiss<CR>")
map("n", "dl", "dd")
map("n", "<ESC>", "<cmd>noh<CR>")
map("n", "<C-d>", "<C-d>zz")
map("n", "<C-u>", "<C-u>zz")
map("n", "N", "nzzzv")
map("n", "n", "Nzzzv")
map("n", "<leader>Y", [["+Y]])
map("n", "Q", "<nop>")
map("n", "<leader>f", vim.lsp.buf.format)
map("n", "<C-k>", "<cmd>cnext<CR>zz")
map("n", "<C-j>", "<cmd>cprev<CR>zz")
map("n", "<leader>s", [[:%s/\<<C-r><C-w>\>/<C-r><C-w>/gI<Left><Left><Left>]])
map("n", "<leader>x", "<cmd>!chmod +x %<CR>", { silent = true })
map("n", "<leader>go", "oif err != nil {<CR>}<Esc>Oreturn err<Esc>")
map("n", "X", "<cmd>bd<CR>")
map("n", "J", "<cmd>bn<CR>")
map("n", "F", "<cmd>bp<CR>")
map("n", "H", "<ESC>^")
map("n", "L", "<ESC>$")
map("n", "S", "<C-w>h")
map("n", "<C-h>", "<cmd> TmuxNavigateLeft<CR>")
map("n", "<C-l>", "<cmd> TmuxNavigateRight<CR>")
map("n", "<C-j>", "<cmd> TmuxNavigateDown<CR>")
map("n", "<C-k>", "<cmd> TmuxNavigateUp<CR>")
map("n", "/", function()
  require("Comment.api").toggle.linewise.current()
end)
map({ "n", "v" }, "<leader>y", [["+y]])
map({ "n", "v" }, "<leader>d", [["_d]])

-- v --
map("v", "J", ":m '>+1<CR>gv=gv")
map("v", "K", ":m '<-2<CR>gv=gv")

-- x --
map("x", "<leader>p", [["_dP]])

-- harpoon --
map("n", "<leader>ad", function()
  require("harpoon.mark").add_file()
end)
map("n", "<leader>h", function()
  require("harpoon.ui").toggle_quick_menu()
end)
map("n", "<leader>j", function()
  require("harpoon.ui").nav_file(1)
end)
map("n", "<leader>k", function()
  require("harpoon.ui").nav_file(2)
end)
map("n", "<leader>l", function()
  require("harpoon.ui").nav_file(3)
end)
map("n", "<leader>;", function()
  require("harpoon.ui").nav_file(4)
end)

-- nvterm --
map("n", "<leader>th", function()
  require("nvterm.terminal").toggle("float")
end)

-- lspconif --
map("n", "gD", function()
  vim.lsp.buf.declaration()
end)
map("n", "gd", function()
  vim.lsp.buf.definition()
end)
map("n", "gi", function()
  vim.lsp.buf.implementation()
end)
map("n", "gr", function()
  vim.lsp.buf.references()
end)
map("n", "K", function()
  vim.lsp.buf.hover()
end)
map("n", "<leader>ls", function()
  vim.lsp.buf.signature_help()
end)
map("n", "<leader>D", function()
  vim.lsp.buf.type_definition()
end)
map("n", "<leader>ca", function()
  vim.lsp.buf.code_action()
end)
